enum MessageStatus {
  SENT
  DELIVERED
  READ
}

type Message @model @auth(rules: [{allow: public}]) @key(name: "byUser", fields: ["userID"]) @key(name: "byChatRoom", fields: ["chatroomID"]) {
  id: ID!
  content: String
  status: MessageStatus
  userID: ID
   user: User @connection(fields: ["userID"])
  chatroomID: ID
  replyToMessageID:ID
}

enum RoomType {
  GROUP
  SINGLE
}

type ChatRoom @model @auth(rules: [{allow: public}]) {
  id: ID!
  newMessage: Int
  chatType: RoomType
  LastMessage: Message @connection
  Messages: [Message] @connection(keyName: "byChatRoom", fields: ["id"])
  ChatRoomUsers: [ChatRoomUser] @connection(keyName: "byChatRoom", fields: ["id"])
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  pix: String
  status: String
  email:String
  lastOnlineAt: AWSTimestamp
  Messages: [Message] @connection(keyName: "byUser", fields: ["id"])
  chatrooms: [ChatRoomUser] @connection(keyName: "byUser", fields: ["id"])
}

type ChatRoomUser @model @key(name: "byChatRoom", fields: ["chatroomID", "userID"]) @key(name: "byUser", fields: ["userID", "chatroomID"]) @auth(rules: [{allow: public}, {allow: public}]) {
  id: ID!
  chatroomID: ID!
  userID: ID!
  chatroom: ChatRoom! @connection(fields: ["chatroomID"])
  user: User! @connection(fields: ["userID"])
}